{
  "type": "Program",
  "elements": [
    {
      "type": "ExpressionMacroDefinition",
      "macroName": "let",
      "literals": [
        "var"
      ],
      "syntaxRules": [
        {
          "type": "SyntaxRule",
          "pattern": [
            {
              "type": "Paren",
              "elements": [
                {
                  "type": "LiteralKeyword",
                  "name": "var"
                },
                {
                  "type": "IdentifierVariable",
                  "name": "id"
                },
                {
                  "type": "Punctuator",
                  "value": "="
                },
                {
                  "type": "ExpressionVariable",
                  "name": "expr"
                }
              ]
            },
            {
              "type": "Brace",
              "elements": [
                {
                  "type": "StatementVariable",
                  "name": "stmt"
                }
              ]
            }
          ],
          "template": {
            "type": "FunctionCall",
            "name": {
              "type": "Function",
              "name": null,
              "params": [
                "id"
              ],
              "elements": [
                {
                  "type": "Variable",
                  "name": "stmt"
                }
              ]
            },
            "arguments": [
              {
                "type": "Variable",
                "name": "expr"
              }
            ]
          }
        }
      ]
    },
    {
      "type": "MacroForm",
      "inputForm": [
        {
          "type": "MacroName",
          "name": "let"
        },
        {
          "type": "Paren",
          "elements": [
            {
              "type": "LiteralKeyword",
              "name": "var"
            },
            {
              "type": "Variable",
              "name": "num"
            },
            {
              "type": "Punctuator",
              "value": "="
            },
            {
              "type": "NumericLiteral",
              "value": 1000
            }
          ]
        },
        {
          "type": "Brace",
          "elements": [
            {
              "type": "ReturnStatement",
              "value": {
                "type": "BinaryExpression",
                "operator": "*",
                "left": {
                  "type": "Variable",
                  "name": "num"
                },
                "right": {
                  "type": "NumericLiteral",
                  "value": 3
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "ForStatement",
      "initializer": {
        "type": "VariableStatement",
        "declarations": [
          {
            "type": "VariableDeclaration",
            "name": "i",
            "value": {
              "type": "NumericLiteral",
              "value": 1
            }
          }
        ]
      },
      "test": {
        "type": "BinaryExpression",
        "operator": "<",
        "left": {
          "type": "Variable",
          "name": "i"
        },
        "right": {
          "type": "NumericLiteral",
          "value": 10
        }
      },
      "counter": {
        "type": "PostfixExpression",
        "operator": "++",
        "expression": {
          "type": "Variable",
          "name": "i"
        }
      },
      "statement": {
        "type": "Block",
        "statements": [
          {
            "type": "IfStatement",
            "condition": {
              "type": "BinaryExpression",
              "operator": "==",
              "left": {
                "type": "Variable",
                "name": "i"
              },
              "right": {
                "type": "NumericLiteral",
                "value": 5
              }
            },
            "ifStatement": {
              "type": "BreakStatement",
              "label": null
            },
            "elseStatement": null
          },
          {
            "type": "FunctionCall",
            "name": {
              "type": "PropertyAccess",
              "base": {
                "type": "Variable",
                "name": "console"
              },
              "name": "log"
            },
            "arguments": [
              {
                "type": "StringLiteral",
                "value": "true"
              }
            ]
          }
        ]
      }
    }
  ]
}