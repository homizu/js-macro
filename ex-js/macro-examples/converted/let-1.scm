(Program (elements ((StatementMacroDefinition (macroName "let") (identifiers ("id")) (expressions ("expr")) (statements ("stmt")) (literals ("var" "and")) (syntaxRules ((SyntaxRule (pattern ((Paren (elements "")) (Block (elements "")))) (template (FunctionCall (arguments ()) (name (Function (name #\nul) (elements ()) (params ())))))) (SyntaxRule (pattern ((Paren (elements ((LiteralKeyword (name "var")) (Repetition (elements ((IdentifierVariable (name "id")) (Punctuator (data "=")) (ExpressionVariable (name "expr")))) (punctuationMark "and"))))) (Block (elements ((Repetition (elements (StatementVariable (name "stmt"))) (punctuationMark ""))))))) (template (FunctionCall (arguments ((Variable (name "expr")) (Ellipsis))) (name (Function (name #\nul) (elements ((BinaryExpression (operator " ") (left (Variable (name "stmt"))) (right (Ellipsis))))) (params ("id" (Ellipsis))))))))))) (letMacroForm (inputForm ((MacroName (name "let")) ((Paren (elements ((LiteralKeyword (data "var")) (Repetition (elements (((Identifier (name "id1")) (Punctuator (data "=")) (BinaryExpression (operator "/") (left (NumericLiteral (value 1))) (right (NumericLiteral (value 2))))) ((Identifier (name "id2")) (Punctuator (data "=")) (NumericLiteral (value 1000000000000))))) (punctuationMark "and"))))) (Block (elements ((Repetition (elements ((VariableStatement (declarations ((VariableDeclaration (name "result") (value (BinaryExpression (operator "+") (left (Variable (name "id1"))) (right (Variable (name "id2"))))))))) (ReturnStatement (value (Variable (name "result")))))) (punctuationMark ""))))))))))))