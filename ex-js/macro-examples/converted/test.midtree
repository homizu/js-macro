{
  "type": "Program",
  "elements": [
    {
      "type": "VariableStatement",
      "declarations": [
        {
          "type": "VariableDeclaration",
          "name": "pi",
          "value": {
            "type": "NumericLiteral",
            "value": 3.14
          }
        }
      ]
    },
    {
      "type": "ExpressionMacroDefinition",
      "macroName": "let",
      "literals": [
        "var"
      ],
      "syntaxRules": [
        {
          "type": "SyntaxRule",
          "pattern": [
            {
              "type": "Paren",
              "elements": [
                {
                  "type": "LiteralKeyword",
                  "name": "var"
                },
                {
                  "type": "IdentifierVariable",
                  "name": "id"
                },
                {
                  "type": "Punctuator",
                  "value": "="
                },
                {
                  "type": "ExpressionVariable",
                  "name": "expr"
                }
              ]
            },
            {
              "type": "Brace",
              "elements": [
                {
                  "type": "StatementVariable",
                  "name": "stmt"
                }
              ]
            }
          ],
          "template": [
            {
              "type": "FunctionCall",
              "name": {
                "type": "Function",
                "name": null,
                "params": [
                  "id"
                ],
                "elements": [
                  {
                    "type": "Variable",
                    "name": "stmt"
                  }
                ]
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "operator": "*",
                  "left": {
                    "type": "Variable",
                    "name": "expr"
                  },
                  "right": {
                    "type": "Variable",
                    "name": "pi"
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "Characterstmt",
      "value": "l"
    },
    {
      "type": "Characterstmt",
      "value": "e"
    },
    {
      "type": "Characterstmt",
      "value": "t"
    },
    {
      "type": "Characterstmt",
      "value": "("
    },
    {
      "type": "Characterstmt",
      "value": "v"
    },
    {
      "type": "Characterstmt",
      "value": "a"
    },
    {
      "type": "Characterstmt",
      "value": "r"
    },
    {
      "type": "Characterstmt",
      "value": "n"
    },
    {
      "type": "Characterstmt",
      "value": "u"
    },
    {
      "type": "Characterstmt",
      "value": "m"
    },
    {
      "type": "Characterstmt",
      "value": "="
    },
    {
      "type": "Characterstmt",
      "value": "1"
    },
    {
      "type": "Characterstmt",
      "value": "E"
    },
    {
      "type": "Characterstmt",
      "value": "3"
    },
    {
      "type": "Characterstmt",
      "value": ")"
    },
    {
      "type": "Block",
      "statements": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "BinaryExpression",
            "operator": "*",
            "left": {
              "type": "Variable",
              "name": "num"
            },
            "right": {
              "type": "NumericLiteral",
              "value": 3
            }
          }
        }
      ]
    },
    {
      "type": "Block",
      "statements": [
        {
          "type": "Function",
          "name": "hoge",
          "params": [
            "x"
          ],
          "elements": [
            {
              "type": "ReturnStatement",
              "value": {
                "type": "Variable",
                "name": "x"
              }
            }
          ]
        },
        {
          "type": "FunctionCall",
          "name": {
            "type": "Variable",
            "name": "hoge"
          },
          "arguments": [
            {
              "type": "NumericLiteral",
              "value": 10
            }
          ]
        }
      ]
    },
    {
      "type": "StatementMacroDefinition",
      "macroName": "test",
      "literals": [],
      "syntaxRules": [
        {
          "type": "SyntaxRule",
          "pattern": [
            {
              "type": "Paren",
              "elements": [
                {
                  "type": "IdentifierVariable",
                  "name": "x"
                }
              ]
            }
          ],
          "template": [
            {
              "type": "Brace",
              "elements": [
                {
                  "type": "VariableStatement",
                  "declarations": [
                    {
                      "type": "VariableDeclaration",
                      "name": "x",
                      "value": {
                        "type": "NumericLiteral",
                        "value": 10
                      }
                    }
                  ]
                },
                {
                  "type": "VariableStatement",
                  "declarations": [
                    {
                      "type": "VariableDeclaration",
                      "name": "y",
                      "value": {
                        "type": "NumericLiteral",
                        "value": 20
                      }
                    }
                  ]
                },
                {
                  "type": "FunctionCall",
                  "name": {
                    "type": "Function",
                    "name": "dec",
                    "params": [
                      "i"
                    ],
                    "elements": [
                      {
                        "type": "IfStatement",
                        "condition": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "Variable",
                            "name": "i"
                          },
                          "right": {
                            "type": "NumericLiteral",
                            "value": 0
                          }
                        },
                        "ifStatement": {
                          "type": "ReturnStatement",
                          "value": {
                            "type": "NumericLiteral",
                            "value": 0
                          }
                        },
                        "elseStatement": {
                          "type": "Block",
                          "statements": [
                            {
                              "type": "FunctionCall",
                              "name": {
                                "type": "PropertyAccess",
                                "base": {
                                  "type": "Variable",
                                  "name": "console"
                                },
                                "name": "log"
                              },
                              "arguments": [
                                {
                                  "type": "Variable",
                                  "name": "i"
                                }
                              ]
                            },
                            {
                              "type": "ReturnStatement",
                              "value": {
                                "type": "FunctionCall",
                                "name": {
                                  "type": "Variable",
                                  "name": "dec"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "operator": "-",
                                    "left": {
                                      "type": "Variable",
                                      "name": "i"
                                    },
                                    "right": {
                                      "type": "NumericLiteral",
                                      "value": 1
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "arguments": [
                    {
                      "type": "NumericLiteral",
                      "value": 10
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FunctionCall",
      "name": {
        "type": "Variable",
        "name": "test"
      },
      "arguments": [
        {
          "type": "Variable",
          "name": "z"
        }
      ]
    },
    {
      "type": "ExpressionMacroDefinition",
      "macroName": "test2",
      "literals": [],
      "syntaxRules": [
        {
          "type": "SyntaxRule",
          "pattern": [
            {
              "type": "Paren",
              "elements": [
                {
                  "type": "IdentifierVariable",
                  "name": "yyy"
                }
              ]
            }
          ],
          "template": [
            {
              "type": "Function",
              "name": null,
              "params": [
                "yyy"
              ],
              "elements": [
                {
                  "type": "VariableStatement",
                  "declarations": [
                    {
                      "type": "VariableDeclaration",
                      "name": "xxx",
                      "value": {
                        "type": "NumericLiteral",
                        "value": 10
                      }
                    }
                  ]
                },
                {
                  "type": "FunctionCall",
                  "name": {
                    "type": "PropertyAccess",
                    "base": {
                      "type": "Variable",
                      "name": "console"
                    },
                    "name": "log"
                  },
                  "arguments": [
                    {
                      "type": "Variable",
                      "name": "xxx"
                    }
                  ]
                },
                {
                  "type": "VariableStatement",
                  "declarations": [
                    {
                      "type": "VariableDeclaration",
                      "name": "t",
                      "value": {
                        "type": "Function",
                        "name": null,
                        "params": [],
                        "elements": [
                          {
                            "type": "FunctionCall",
                            "name": {
                              "type": "PropertyAccess",
                              "base": {
                                "type": "Variable",
                                "name": "console"
                              },
                              "name": "log"
                            },
                            "arguments": [
                              {
                                "type": "Variable",
                                "name": "yyy"
                              }
                            ]
                          },
                          {
                            "type": "FunctionCall",
                            "name": {
                              "type": "PropertyAccess",
                              "base": {
                                "type": "Variable",
                                "name": "console"
                              },
                              "name": "log"
                            },
                            "arguments": [
                              {
                                "type": "Variable",
                                "name": "xxx"
                              }
                            ]
                          },
                          {
                            "type": "VariableStatement",
                            "declarations": [
                              {
                                "type": "VariableDeclaration",
                                "name": "xxx",
                                "value": {
                                  "type": "NumericLiteral",
                                  "value": 30
                                }
                              }
                            ]
                          },
                          {
                            "type": "VariableStatement",
                            "declarations": [
                              {
                                "type": "VariableDeclaration",
                                "name": "yyy",
                                "value": {
                                  "type": "NumericLiteral",
                                  "value": 20
                                }
                              }
                            ]
                          },
                          {
                            "type": "FunctionCall",
                            "name": {
                              "type": "PropertyAccess",
                              "base": {
                                "type": "Variable",
                                "name": "console"
                              },
                              "name": "log"
                            },
                            "arguments": [
                              {
                                "type": "Variable",
                                "name": "xxx"
                              },
                              {
                                "type": "Variable",
                                "name": "yyy"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "FunctionCall",
                  "name": {
                    "type": "Variable",
                    "name": "t"
                  },
                  "arguments": []
                },
                {
                  "type": "FunctionCall",
                  "name": {
                    "type": "PropertyAccess",
                    "base": {
                      "type": "Variable",
                      "name": "console"
                    },
                    "name": "log"
                  },
                  "arguments": [
                    {
                      "type": "Variable",
                      "name": "yyy"
                    }
                  ]
                },
                {
                  "type": "FunctionCall",
                  "name": {
                    "type": "PropertyAccess",
                    "base": {
                      "type": "Variable",
                      "name": "console"
                    },
                    "name": "log"
                  },
                  "arguments": [
                    {
                      "type": "Variable",
                      "name": "xxx"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "VariableStatement",
      "declarations": [
        {
          "type": "VariableDeclaration",
          "name": "zzz",
          "value": {
            "type": "NumericLiteral",
            "value": 1
          }
        }
      ]
    },
    {
      "type": "VariableStatement",
      "declarations": [
        {
          "type": "VariableDeclaration",
          "name": "f",
          "value": {
            "type": "FunctionCall",
            "name": {
              "type": "Variable",
              "name": "test2"
            },
            "arguments": [
              {
                "type": "Variable",
                "name": "zzz"
              }
            ]
          }
        }
      ]
    },
    {
      "type": "FunctionCall",
      "name": {
        "type": "Variable",
        "name": "f"
      },
      "arguments": [
        {
          "type": "Variable",
          "name": "zzz"
        }
      ]
    }
  ]
}